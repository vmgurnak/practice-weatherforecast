{"mappings":"AACuB,MAAjBA,EAAW,CACfC,WAAYC,SAASC,cAAc,mBACnCC,KAAMF,SAASC,cAAc,aAIRH,EAAdC,WAAWI,iBAAiB,UAGvB,SAASC,GAEkBA,EAAnCC,iBACJC,QAAQC,IAAIH,EAAII,eAEA,MAAVC,KAAEA,EAAIC,KAAEA,GAASN,EAAII,cAAcG,SACzCL,QAAQC,IAAIE,EAAKG,OACjBN,QAAQC,IAAIG,EAAKE,OAcG,SAAEH,EAAMC,GAC5B,MAAMG,EAAW,+BACXC,EAAY,iBAIZC,EAAS,IAAIC,gBAAgB,CACjCC,IAJc,kCAKdC,EAAGT,EACHC,KAAMA,EACNS,KAAM,OAKR,OAAOC,MAAM,GAAGP,IAAWC,KAAaC,KAAUM,MAAKC,IAErD,GADAhB,QAAQiB,IAAID,IACPA,EAAKE,GACR,MAAM,IAAIC,MAAMH,EAAKI,YAGvB,OAAOJ,EAAKK,MAAM,G,CAhCuCC,CAA5CnB,EAAKG,MAAOF,EAAKE,OAC7BS,MACCQ,GACG/B,EAASI,KAAK4B,UAAyBD,EAAKE,SAASC,YAuCzDC,KACC,EAACC,KACCA,EACAC,KAAKC,UACHA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,OAEjB,4CACID,WAAcC,mDACPL,wCACQK,uCACDH,qBAGzBI,KAAK,MAnDLC,OAAMC,GAAOpC,QAAQiB,IAAImB,KAEDC,SAAhB,IAAMvC,EAAIwC,OAAOC,S","sources":["src/js/script.js"],"sourcesContent":["// Объект с поиском элементов\nconst elements = {\n  searchForm: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-list'),\n};\n\n// Слушатель на форме, событие submit\nelements.searchForm.addEventListener('submit', handlerSearch);\n\n// Коллбэк-функция\nfunction handlerSearch(evt) {\n  // Сброс стандартных настроек при перезагрузке\n  evt.preventDefault();\n  console.dir(evt.currentTarget);\n  // Деструктуризация\n  const { city, days } = evt.currentTarget.elements;\n  console.dir(city.value);\n  console.dir(days.value);\n\n  // Вызов функции запроса на бэкенд, получение данных и создание разметки - Call the request function on the backend, get data and create markup\n  serviceWeather(city.value, days.value)\n    .then(\n      data =>\n        (elements.list.innerHTML = createMarkup(data.forecast.forecastday))\n    )\n    .catch(err => console.log(err))\n    // Очистка формы после запроса - Clearing the form after a request\n    .finally(() => evt.target.reset());\n}\n\n// Функция запроса на бэкенд - Backend request function\nfunction serviceWeather(city, days) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const END_POINT = '/forecast.json';\n  const API_KEY = '6410346f89264d6e919165208231505';\n\n  // экземпляр класса URLSearchParams для составлении строки параметров - an instance of the URLSearchParams class for composing a string of parameters\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: city,\n    days: days,\n    lang: 'ru',\n  });\n\n  // console.log(params.toString());\n\n  return fetch(`${BASE_URL}${END_POINT}?${params}`).then(resp => {\n    console.log(resp);\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n\n  // Без экземпляра класса new URLSearchParams\n  // fetch(`${BASE_URL}${END_POINT}?key=${API_KEY}&q=${city}&days=${days}&lang=uk`)\n}\n\n// Функция для разметки - Markup function\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        date,\n        day: {\n          avgtemp_c,\n          condition: { icon, text },\n        },\n      }) => `<li class=\"weather-card\">\n    <img src=\"${icon}\" alt=\"${text}\" class=\"weather-icon\"/>\n    <h2 class=\"date\">${date}</h2>\n    <h3 class=\"weather-text\">${text}</h3>\n    <h3 class=\"temperature\">${avgtemp_c} °C</h3>\n</li>`\n    )\n    .join('');\n}\n"],"names":["$1ee2b6306238ec66$var$elements","searchForm","document","querySelector","list","addEventListener","evt","preventDefault","console","dir","currentTarget","city","days","elements","value","BASE_URL","END_POINT","params","URLSearchParams","key","q","lang","fetch","then","resp","log","ok","Error","statusText","json","$1ee2b6306238ec66$var$serviceWeather","data","innerHTML","forecast","forecastday","map","date","day","avgtemp_c","condition","icon","text","join","catch","err","finally","target","reset"],"version":3,"file":"index.3191b830.js.map"}